## -*- shell-script -*- ######################################################
##                                                                          ##
##  WildFly bootstrap Script Configuration                                    ##
##                                                                          ##
##############################################################################

echo "Running RUN CONF for jboss instance ${INSTANCE_NO}"

#
# This file is optional; it may be removed if not needed.
#

#
# Specify the maximum file descriptor limit, use "max" or "maximum" to use
# the default, as queried by the system.
#
# Defaults to "maximum"
#
#MAX_FD="maximum"

#
# Specify the profiler configuration file to load.
#
# Default is to not load profiler configuration file.
#
#PROFILER=""

#
# Specify the location of the Java home directory.  If set then $JAVA will
# be defined to $JAVA_HOME/bin/java, else $JAVA will be "java".
#
#JAVA_HOME="/opt/java/jdk"

# tell linux glibc how many memory pools can be created that are used by malloc
# MALLOC_ARENA_MAX="5"

#
# Specify the exact Java VM executable to use.
#
#JAVA=""

if [ "x$JBOSS_MODULES_SYSTEM_PKGS" = "x" ]; then
   JBOSS_MODULES_SYSTEM_PKGS="org.jboss.byteman"
fi

# Uncomment the following line to prevent manipulation of JVM options
# by shell scripts.
#
#PRESERVE_JAVA_OPTS=true

#
# Specify options to pass to the Java VM.
#
if [ "x$JAVA_OPTS" = "x" ]; then
   JAVA_OPTS="-Xms64m -Xmx512m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m -Djava.net.preferIPv4Stack=true"
   JAVA_OPTS="$JAVA_OPTS -Djboss.modules.system.pkgs=$JBOSS_MODULES_SYSTEM_PKGS -Djava.awt.headless=true"
else
   echo "JAVA_OPTS already set in environment; overriding default settings with values: $JAVA_OPTS"
fi

# Sample JPDA settings for remote socket debugging
#JAVA_OPTS="$JAVA_OPTS -agentlib:jdwp=transport=dt_socket,address=8787,server=y,suspend=n"

# Sample JPDA settings for shared memory debugging
#JAVA_OPTS="$JAVA_OPTS -agentlib:jdwp=transport=dt_shmem,server=y,suspend=n,address=jboss"

# Uncomment to not use JBoss Modules lockless mode
#JAVA_OPTS="$JAVA_OPTS -Djboss.modules.lockless=false"

# Uncomment to gather JBoss Modules metrics
#JAVA_OPTS="$JAVA_OPTS -Djboss.modules.metrics=true"

# Uncomment to enable the experimental JDK 11 support for ByteBuddy
# ByteBuddy is the default bytecode provider of Hibernate ORM
#JAVA_OPTS="$JAVA_OPTS -Dnet.bytebuddy.experimental=true"

# Uncomment this to run with a security manager enabled
# SECMGR="true"

# Uncomment this in order to be able to run WildFly on FreeBSD
# when you get "epoll_create function not implemented" message in dmesg output
#JAVA_OPTS="$JAVA_OPTS -Djava.nio.channels.spi.SelectorProvider=sun.nio.ch.PollSelectorProvider"

# Uncomment this out to control garbage collection logging
# GC_LOG="true"

# Uncomment and edit to use a custom java.security file to override all the Java security properties
#JAVA_OPTS="$JAVA_OPTS -Djava.security.properties==/path/to/custom/java.security"
#

#set SERVER_CONF
SERVER_CONF="-DJBOSS_INSTANCE_NO=${INSTANCE_NO}"
SERVER_CONF="-Djboss.tx.node.id=UNIQUE_NODE_ID_${INSTANCE_NO}"

#Use the jboss.socket.binding.port-offset variable to avoid port conflicts
#between multi-instances
if [ "x$INSTANCE_NO" != "x" ]; then
   if [ ${INSTANCE_NO} -gt 0 ]; then
      INSTANCE_NO=$((${INSTANCE_NO}-1))
   fi
   echo "Setting up JBOSS_SOCKET_BINDING_PORT_OFFSET=[$INSTANCE_NO]"
   if [ "x$SERVER_OPTS" != "x" ]; then
      SERVER_OPTS="${SERVER_OPTS} -Djboss.socket.binding.port-offset=$((${INSTANCE_NO}-1))"
   else
      SERVER_OPTS="-Djboss.socket.binding.port-offset=${INSTANCE_NO}"
   fi
fi

#set bind address & their respective ports
if [ "x$JBOSS_BIND_ADDRESS_MANAGEMENT" != "x" ]; then
   echo "Setting up JBOSS_BIND_ADDRESS_MANAGEMENT=[$JBOSS_BIND_ADDRESS_MANAGEMENT]"
   if [ "x$SERVER_OPTS" != "x" ]; then
      SERVER_OPTS="${SERVER_OPTS} -Djboss.bind.address.management=${JBOSS_BIND_ADDRESS_MANAGEMENT}"
   else
      SERVER_OPTS="-Djboss.bind.address.management=${JBOSS_BIND_ADDRESS_MANAGEMENT}"
   fi
fi

if [ "x$JBOSS_MANAGEMENT_HTTP_PORT" != "x" ]; then
   echo "Setting up JBOSS_MANAGEMENT_HTTP_PORT=[$JBOSS_MANAGEMENT_HTTP_PORT]"
   if [ "x$SERVER_OPTS" != "x" ]; then
      SERVER_OPTS="${SERVER_OPTS} -Djboss.management.http.port=${JBOSS_MANAGEMENT_HTTP_PORT}"
   else
      SERVER_OPTS="-Djboss.management.http.port=${JBOSS_MANAGEMENT_HTTP_PORT}"
   fi
fi

if [ "x$JBOSS_MANAGEMENT_HTTPS_PORT" != "x" ]; then
   echo "Setting up JBOSS_MANAGEMENT_HTTPS_PORT=[$JBOSS_MANAGEMENT_HTTPS_PORT]"
   if [ "x$SERVER_OPTS" != "x" ]; then
      SERVER_OPTS="${SERVER_OPTS} -Djboss.management.https.port=${JBOSS_MANAGEMENT_HTTPS_PORT}"
   else
      SERVER_OPTS="-Djboss.management.https.port=${JBOSS_MANAGEMENT_HTTPS_PORT}"
   fi
fi

if [ "x$JBOSS_BIND_ADDRESS" != "x" ]; then
   echo "Setting up JBOSS_BIND_ADDRESS=[$JBOSS_BIND_ADDRESS]"
   if [ "x$SERVER_OPTS" != "x" ]; then
      SERVER_OPTS="${SERVER_OPTS} -Djboss.bind.address=${JBOSS_BIND_ADDRESS}"
   else
      SERVER_OPTS="-Djboss.bind.address=${JBOSS_BIND_ADDRESS}"
   fi
fi

if [ "x$JBOSS_AJP_PORT" != "x" ]; then
   echo "Setting up JBOSS_AJP_PORT=[$JBOSS_AJP_PORT]"
   if [ "x$SERVER_OPTS" != "x" ]; then
      SERVER_OPTS="${SERVER_OPTS} -Djboss.ajp.port=${JBOSS_AJP_PORT}"
   else
      SERVER_OPTS="-Djboss.ajp.port=${JBOSS_AJP_PORT}"
   fi
fi

if [ "x$JBOSS_HTTP_PORT" != "x" ]; then
   echo "Setting up JBOSS_HTTP_PORT=[$JBOSS_HTTP_PORT]"
   if [ "x$SERVER_OPTS" != "x" ]; then
      SERVER_OPTS="${SERVER_OPTS} -Djboss.http.port=${JBOSS_HTTP_PORT}"
   else
      SERVER_OPTS="-Djboss.http.port=${JBOSS_HTTP_PORT}"
   fi
fi

if [ "x$JBOSS_HTTPS_PORT" != "x" ]; then
   echo "Setting up JBOSS_HTTPS_PORT=[$JBOSS_HTTPS_PORT]"
   if [ "x$SERVER_OPTS" != "x" ]; then
      SERVER_OPTS="${SERVER_OPTS} -Djboss.https.port=${JBOSS_HTTPS_PORT}"
   else
      SERVER_OPTS="-Djboss.https.port=${JBOSS_HTTPS_PORT}"
   fi
fi

if [ "x$TXN_RECOVERY_ENVIRONMENT_PORT" != "x" ]; then
   echo "Setting up TXN_RECOVERY_ENVIRONMENT_PORT=[$TXN_RECOVERY_ENVIRONMENT_PORT]"
   if [ "x$SERVER_OPTS" != "x" ]; then
      SERVER_OPTS="${SERVER_OPTS} -Djboss.txn.recovery.environment=${TXN_RECOVERY_ENVIRONMENT_PORT}"
   else
      SERVER_OPTS="-Djboss.txn.recovery.environment=${TXN_RECOVERY_ENVIRONMENT_PORT}"
   fi
fi

if [ "x$TXN_STATUS_MANAGER_PORT" != "x" ]; then
   echo "Setting up TXN_STATUS_MANAGER_PORT=[$TXN_STATUS_MANAGER_PORT]"
   if [ "x$SERVER_OPTS" != "x" ]; then
      SERVER_OPTS="${SERVER_OPTS} -Djboss.txn.status.manager=${TXN_STATUS_MANAGER_PORT}"
   else
      SERVER_OPTS="-Djboss.txn.status.manager=${TXN_STATUS_MANAGER_PORT}"
   fi
fi

